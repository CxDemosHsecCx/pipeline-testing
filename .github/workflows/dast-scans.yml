name: checkmarx-dast-scans

on:
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of Scan'
        required: true
        default: 'webscan'
        type: choice
        options:
          - webscan
          - api-scan
          - api-and-web-scan
      config_file:
        description: 'Configuration File'
        required: true
        default: 'security_tweets.yaml'
        type: choice
        options:
          - security_tweets.yaml
          - another_config.yaml
          - custom_config.yaml
      environment:
        description: 'Environment'
        required: true
        default: 'sandbox'
        type: choice
        options:
          - sandbox

permissions:
  contents: read
  security-events: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  prepare-environment:
    runs-on: ubuntu-latest
    outputs:
      output_dir: ${{ steps.prepare.outputs.output_dir }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Prepare Output Directory
        id: prepare
        run: |
          OUTPUT_DIR="${{ github.workspace }}/output_folder"
          mkdir -p "$OUTPUT_DIR"
          sudo chown -R 1000:1000 "$OUTPUT_DIR"
          echo "output_dir=$OUTPUT_DIR" >> $GITHUB_ENV

  checkmarx-DAST-Scan:
    runs-on: ubuntu-latest
    needs: prepare-environment
    if: ${{ inputs.scan_type == 'webscan' || inputs.scan_type == 'api-and-web-scan' }}
    steps:
      - name: Reuse Prepared Output Directory
        run: |
          echo "Output directory: ${{ needs.prepare-environment.outputs.output_dir }}"
      - name: Run Checkmarx DAST Scan (WebScan)
        uses: checkmarx/dast-action@latest
        with:
          config: './scan-configs/security_tweets.yaml'
          #config: './scan-configs/${{ inputs.config_file }}'
          command: 'web'
          verbose: true
          log_level: info
          base_url: ${{ secrets.CX_BASE_URI }}
          environment_id: ${{ secrets.SECURITY_TWEETS_ENV_ID }}
          #environment_id: ${{ inputs.environment }}
          output: ${{ github.workspace }}/output_folder
        env:
          CX_APIKEY: ${{ secrets.API_KEY }}
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload WebScan Logs
        with:
          name: webscan-report
          path: ${{ github.workspace }}/output_folder

  checkmarx-API-scan:
    runs-on: ubuntu-latest
    needs: prepare-environment
    if: ${{ inputs.scan_type == 'api-scan' || inputs.scan_type == 'api-and-web-scan' }}
    steps:
      - name: Reuse Prepared Output Directory
        run: |
          echo "Output directory: ${{ needs.prepare-environment.outputs.output_dir }}"
      - name: Run Checkmarx DAST Scan (API Scan)
        uses: checkmarx/dast-action@latest
        with:
          config: './scan-configs/altoro_mutual.yaml'
          openapi: './scan-configs/altoro_mutual.json'
          #config: './scan-configs/${{ inputs.config_file }}'
          command: 'api'
          verbose: true
          log_level: info
          base_url: ${{ secrets.CX_BASE_URI }}
          environment_id: ${{ secrets.ALTORO__ENV_ID }}
          #environment_id: ${{ inputs.environment }}
          output: ${{ github.workspace }}/output_folder
        env:
          CX_APIKEY: ${{ secrets.API_KEY }}
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload API Scan Logs
        with:
          name: api-scan-report
          path: ${{ github.workspace }}/output_folder

  reclaim-output:
    runs-on: ubuntu-latest
    needs: [checkmarx-DAST-Scan, checkmarx-API-scan]
    if: always()
    steps:
      - name: Reclaim Output Directory
        run: sudo chown -R 1001:1001 ${{ github.workspace }}/output_folder
